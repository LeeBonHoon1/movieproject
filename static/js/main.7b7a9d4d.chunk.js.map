{"version":3,"sources":["logo.svg","Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,qCCkCAA,MA9Bf,YAA4D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC/C,OAAO,qBAAKC,UAAU,gBAAf,SACJ,sBAAKA,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACA,oBAAIA,UAAU,eAAd,SAA8BJ,IACjC,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAGK,UAAU,iBAAb,UAA+BH,EAAQM,MAAM,EAAG,KAAhD,SACA,oBAAIH,UAAU,gBAAd,SACKD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACZ,oBAAeN,UAAU,gBAAzB,SACKK,GADIC,iBC4CNC,E,4MAlDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKGC,IAAMC,IAAI,0CALb,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAGT,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAN1B,2C,uDAUZ,WACEQ,KAAKN,c,oBAKP,WACE,MAA6BM,KAAKT,MAA1BC,EAAR,EAAQA,UAAUC,EAAlB,EAAkBA,OAClB,OACA,yBAASV,UAAU,YAAnB,SACGS,EACA,qBAAKS,MAAM,SAAX,SACC,sBAAMlB,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACEU,EAAON,KAAI,SAAAe,GAAK,OAChB,cAAC,EAAD,CAEFzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GAlCC2B,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b7a9d4d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Movie.css\";\n\nfunction Movie ({id, year, title, summary, poster, genres}) {\n    return <div className=\"movies__movie\">\n       <div className=\"movie\">\n           <img src={poster} alt={title} title={title} />\n           <div className=\"movie__data\">\n           <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <p className=\"movie__summary\">{summary.slice(0, 100)}...</p>\n        <ul className=\"movie__genres\">\n            {genres.map((genre, index) => (\n            <li key={index}className=\"genres__genre\">\n                {genre}\n            </li>\n             ))}\n        </ul>\n    </div>\n </div>\n\n    </div>\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport axios from \"axios\";\nimport Movie from './Movie';\n\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n}\n  \n  getMovies = async () => {\n    const {\n      data: {\n        data: {movies}\n      }\n      } =  await axios.get(\"https://yts.mx/api/v2/list_movies.json\")\n      this.setState({movies, isLoading: false})\n  }\n\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n\n\n  render() {\n    const { isLoading,movies } = this.state;\n    return (\n    <section className=\"container\">\n      {isLoading ? (\n       <div class=\"loader\">\n        <span className=\"loader__text\">Loading...</span>\n      </div>\n      ):( \n      <div className=\"movies\">\n       {movies.map(movie => (\n        <Movie \n      key={movie.id}\n      id={movie.id}\n      year={movie.year}\n      title={movie.title}\n      summary={movie.summary}\n      poster={movie.medium_cover_image}\n      genres={movie.genres}      \n      />\n       ))}\n      </div>\n      )}\n      </section>\n    );\n       }\n      }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}